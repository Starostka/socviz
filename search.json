[
  {
    "objectID": "story.html",
    "href": "story.html",
    "title": "SF Crime Data Analysis and Visualization",
    "section": "",
    "text": "Show the code\nimport folium\nimport pandas as pd\nimport polars as pl\nimport pandas as pd\nfrom bokeh.models import ColumnDataSource, FactorRange\nfrom bokeh.io import output_notebook\nfrom bokeh.models import ColumnDataSource\nfrom bokeh.plotting import figure, show\nfrom bokeh.sampledata.commits import data\nfrom bokeh.transform import jitter\nfrom bokeh.palettes import HighContrast3\nfrom bokeh.plotting import figure, show\nfrom bokeh.io import show\nfrom bokeh.layouts import row, column\nfrom bokeh.models import CustomJS, RadioButtonGroup\nfrom bokeh.models import TabPanel, Tabs\nfrom bokeh.plotting import figure, show\nfrom bokeh.models import Paragraph\nfrom bokeh.transform import dodge\nfrom folium.plugins import HeatMap\nfrom bokeh.palettes import Category20\n\noutput_notebook()\n\n\n\n    \n        \n        Loading BokehJS ..."
  },
  {
    "objectID": "story.html#dataset",
    "href": "story.html#dataset",
    "title": "SF Crime Data Analysis and Visualization",
    "section": "Dataset",
    "text": "Dataset\nIn this story, we will explore the San Francisco Police Department’s (SFPD) Incient Report Dataset with the time frame from January 2003 to May 2018.\nThis dataset is a collection of data on criminal incidents reported in SF, which provides the information of incident date, incident time, incident category, police district, latitude, logitude, etc. The dataset contains 35 columns and more than 2 million records of crimes within the timeframe. According to the data, there were 37 categories of crimes recorded across San Francisco city."
  },
  {
    "objectID": "story.html#abstract",
    "href": "story.html#abstract",
    "title": "SF Crime Data Analysis and Visualization",
    "section": "Abstract",
    "text": "Abstract\nThe aim of this report is utilizing the techniques of data visualization for the analytics of crime occured in San Francisco. The primary idea of this data analysis study is to obtain the insights from the observation, in order to evaluate the criminal situation for the past decades in San Francisco, as well as help prevent potential crimes in the future. The data analysis will be based on Time-Series, Geographic and Interative Visualization respectively.\nAccording to SFNext Index, with the exception of robberies, violent crime in San Francisco is below average for large cities. In 2019 and 2020, San Francisco ranked in the bottom half among major U.S. cities, with rates of 670 and 540 violent crime incidents per 100,000 residents, respectively. Hence, we are interested in how Robbery had increased the violent crime level in San Francisco."
  },
  {
    "objectID": "story.html#timeseries-how-the-occurrence-of-robbery-changed-over-the-time",
    "href": "story.html#timeseries-how-the-occurrence-of-robbery-changed-over-the-time",
    "title": "SF Crime Data Analysis and Visualization",
    "section": "Timeseries: How the occurrence of Robbery changed over the time?",
    "text": "Timeseries: How the occurrence of Robbery changed over the time?\n\nIf we divide the time of the incidents into hourly timeslots, it becomes apparent that the number of robberies reaches its highest point between 2 and 3 pm and remains consistently high until 5 pm. After 5 pm, there is a sharp decline during the evening, but a secondary peak occurs between 1 and 2 am.Between 2 am and 2 pm, the number of incidents increases steadily.\n\n\nShow the code\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\n\n\ndf_before_2018 = pd.read_csv('data/Police_Department_Incident_Reports__Historical_2003_to_May_2018.csv')\ndf_before_2018['Date'] = pd.to_datetime(df_before_2018['Date'])\ndf_before_2018['Year'] = df_before_2018['Date'].dt.year\ndf_before_2018['Month'] = df_before_2018['Date'].dt.month\ndf_before_2018['Hour'] = pd.DatetimeIndex(df_before_2018['Time']).hour\ndf_before_2018 = df_before_2018.loc[df_before_2018['Year'] != 2018]\n\n\nfocuscrimes = ['ROBBERY']\n\nhour_of_day = [i for i in range(0,24)]\nhourly_slots = {}\nfor i in range(len(hour_of_day)):\n    if i+1 == len(hour_of_day):\n        start = hour_of_day[i]\n        end = hour_of_day[0]\n        hourly_slots[start] = str(start) + \"-\" + str(end)\n    else:\n        start = hour_of_day[i]\n        end = hour_of_day[i+1]\n        hourly_slots[start] = str(start) + \"-\" + str(end)\n\ndf_before_2018[\"time_period\"] = [hourly_slots[int(str(i).split(\":\")[0])] for i in list(df_before_2018['Hour'])]\n\nyearly_pattern = df_before_2018.groupby(by=[\"Year\", \"Category\"]).size().reset_index(name=\"Count\")\n\nyearly_pattern = yearly_pattern.loc[yearly_pattern['Category'].isin(focuscrimes)].reset_index(drop=True)\n\nhourly_pattern = df_before_2018.groupby(by=[\"time_period\", \"Category\"]).size().reset_index(name=\"Count\")\n\nhourly_pattern = hourly_pattern.loc[hourly_pattern['Category'].isin(focuscrimes)].reset_index(drop=True)\n\n\nplt.figure(figsize=(7.5,5))\nplt.suptitle(\"Robbery Incidents in Time-series\" ,fontsize=14, y=1.0, fontweight='bold', color='black')\n\n# Yealy trend\ntemp1 = yearly_pattern.loc[yearly_pattern['Category'] == 'ROBBERY'].reset_index(drop=True)\nx = temp1[\"Year\"]\ny = temp1[\"Count\"]\nplt.subplot(2,2,1)\nplt.title('Robbery Incidents Yealy Pattern', pad=-14, fontsize = 9, fontweight='bold', fontstyle=\"italic\")\nplt.bar(x, y, width=0.6, edgecolor=\"black\", color='lavender')\nplt.xticks(x, yearly_pattern['Year'].unique().tolist(), rotation=45, fontsize = 7)\nplt.tight_layout()\nplt.ylim(top=(np.max(y)+(np.max(y)*0.3)))\n\n# Hourly trend\ntemp2 = hourly_pattern.loc[hourly_pattern['Category'] == 'ROBBERY'].reset_index(drop=True)\nx = temp2[\"time_period\"]\ny = temp2[\"Count\"]\nplt.subplot(2,2,2)\nplt.title('Robbery Incidents Hourly Pattern', pad=-14, fontsize = 9, fontweight='bold', fontstyle=\"italic\")\nplt.bar(x, y, width=0.6, edgecolor=\"black\", color='lavender')\nplt.xticks(x, hourly_slots.values(), rotation=45, fontsize = 6)\nplt.tight_layout()\nplt.ylim(top=(np.max(y)+(np.max(y)*0.3)))\n\n# Calplot\nimg = mpimg.imread('Calplot_2012.png')\nplt.subplot(2,1,2)\nplt.imshow(img)\nplt.axis('off')\n\nplt.tight_layout()\n\n\n\n\n\nFrom 2003 to 2017, we can see the incidents fluctuated accross years. Specifically, in 2010 and 2011, it has a significant decreased from 2008 and 2009. The Rand Corporation studied this phenomenon on a national level in 2010, concluding that the crime prevention benefit of hiring more officers is well worth the cost. Reference\nHowever, there was a resurgence in incidents in 2012, with a noticeable gap from the previous year. After analyzing the robbery incidents data in 2012, we observed a marked increase in robberies on the final Sunday in June in San Francisco. Further investigation revealed that this date coincided with the San Francisco LGBT Pride Parade, which started at Beale Street and Market Street and continued down to 8th Street."
  },
  {
    "objectID": "story.html#map-where-does-robbery-most-likely-take-place",
    "href": "story.html#map-where-does-robbery-most-likely-take-place",
    "title": "SF Crime Data Analysis and Visualization",
    "section": "Map: Where does robbery most likely take place?",
    "text": "Map: Where does robbery most likely take place?\n\nLet’s examine the robbery locations on June 24, 2012, during the Pride Parade in San Francisco which typically occurs on Market Street(Reference: Wikipedia).\nIn the visualization of the robbery incidents data on the day when the Pride Parade occured, the three location marks Market Street, 8th Street and Beala Street respectively. The red dots indicates the location of the robberies taking place. It shows an obvious fact that in the 33 incidents recorded on 24 June 2012, most of the crimes happened in the range of the routes that the parade covered.\n\n\n\nShow the code\n# df_before_2018 = pd.read_csv('data/Police_Department_Incident_Reports__Historical_2003_to_May_2018.csv')\n# df_before_2018['Date'] = pd.to_datetime(df_before_2018['Date'])\n# df_before_2018['Year'] = df_before_2018['Date'].dt.year\n# df_before_2018['Month'] = df_before_2018['Date'].dt.month\n# df_before_2018['Hour'] = pd.DatetimeIndex(df_before_2018['Time']).hour\n# df_before_2018 = df_before_2018.loc[df_before_2018['Year'] != 2018]\n\n# << uses pre-transformed instead of above\ndf_before_2018 = pl.read_csv('data/before_2018.csv').to_pandas()\n\ndf_robbery = df_before_2018.loc[df_before_2018['Category']==\"ROBBERY\"]\ndf_robbery = df_robbery[df_robbery[\"Year\"] == 2012]\ndf_robbery_pride = df_robbery[df_robbery['Date'] == '2012-6-24']\n\nSF_map = folium.plugins.DualMap(location=[37.77919, -122.41914],\n                    zoom_start = 12,\n                    tiles = \"openstreetmap\")\n\nconstraint = (df_before_2018['Category'] == 'ROBBERY') & (df_before_2018['Year'] >= 2011) & (df_before_2018['Year'] <= 2012) & (df_before_2018['Resolution'] == \"ARREST, BOOKED\")\ndf_robbery_heat = df_before_2018.loc[constraint].reset_index(drop=True)\n\n\nget_XY = list(zip(list(df_robbery_pride[\"Y\"]), list(df_robbery_pride[\"X\"])))\n\nSF_map = folium.Map([37.77919, -122.41914], zoom_start=13, tiles = \"openstreetmap\")\nfolium.Marker([37.77351584799628, -122.42148577465927], popup=\"Market Street\").add_to(SF_map)\nfolium.Marker([37.78907067508782, -122.3929690574588], popup=\"Beala Street\").add_to(SF_map)\nfolium.Marker([37.77295458293956, -122.40701151351163], popup='8th Street').add_to(SF_map)\n\nfor x,y in get_XY:\n    folium.CircleMarker([x, y],\n                    radius=2,\n                    color='red',\n                    ).add_to(SF_map)\n\n\nx_y_robbery = list(zip(list(df_robbery_heat[\"Y\"]), list(df_robbery_heat[\"X\"])))\n\nHeatMap(x_y_robbery, min_opacity=0.35, overlay=True).add_to(SF_map)\n\nSF_map\n\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\nThe incidence of robbery is relatively high in the near Market Street, indicating that criminals are more prone to commit robbery in crowded areas, thus increasing their chances of escape. Additionally, the buildings and blocks in the Market Street area are more densely packed, offering additional cover and refuge for criminals.\nThis observation also aligns with the result of the heatmap regarding robbery occurrence in 2011 and 2012, as the map above indicates. It reveals the fact that areas with a high concentration of stores and a large population, along with a complex urban infrastructure, are more susceptible to robbery incidents.\nHowever, despite the fact that the Tenderloin district where Market Street located had the highest number of robbery incidents, the data implies that it was not the most active police district. This fact can be counted to the assumption that there was a lack of police power resources in Tenderloin district.\nCluster Correlation idea: Furthermore, we can select two clusters and a little info box pops up over the cursor printing the correlation between the two clusters."
  },
  {
    "objectID": "story.html#the-robbery-evolvement",
    "href": "story.html#the-robbery-evolvement",
    "title": "SF Crime Data Analysis and Visualization",
    "section": "The robbery evolvement",
    "text": "The robbery evolvement\n\nTODO: not sure exactly what to put here…\n\n\n\nShow the code\ndataset = pl.read_csv('data/before_2018.csv')\ndata = (\n    dataset\n    .groupby(['Hour', 'PdDistrict']).agg(pl.count())\n    .with_columns((pl.col('Hour')/pl.col('count')).alias('normalized'))\n    .sort(pl.col('Hour'))\n)\ndata = data.pivot(index = 'Hour', columns = ['PdDistrict'], values = ['normalized'])\n# data.schema\n\nfocuscrimes = set(['BAYVIEW', 'INGLESIDE', 'TARAVAL', 'CENTRAL'])\n\nsource = ColumnDataSource(data.to_pandas())\nhours = data['Hour'].unique().to_list()\nhours = sorted(hours)\np = figure(title=\"Crimes per hour\", x_axis_label='Hour of the day', y_axis_label='Percentage Frequency', \n           x_range = FactorRange(factors=[str(hour) for hour in hours]))\nbar = {}\nfor indx, i in enumerate(focuscrimes):\n    bar[i] = p.vbar(x=\"Hour\", top=i, width=0.3, \n                    source=source, legend_label=i, muted_alpha=0.2, muted=False, color=Category20[14][indx])\np.legend.title = \"Category\"\np.legend.location = \"top_left\"\n\np.legend.click_policy = \"hide\"\np.legend.label_text_color = \"black\"\np.legend.title_text_color = \"black\"\nshow(p)"
  }
]